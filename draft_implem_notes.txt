//https://sourceforge.net/p/saga-gis/code/ci/master/tree/saga-gis/src/tools/shapes/shapes_tools/shapes_buffer.cpp
def buffer (geometry,distancem):
	if collection:
		for geometry in  geometries:
			buffered=buffer( geometry)
		return(buffered)
	if vector length = 1: // point
		buffered=make_arcs(srcPnt,distance)
		make points at given interval/precision
	else:
		previousAz = None
		previousVertex = None
		for vertex in vertices:
			currentAz = az(vertex,previousVertex)
			QVector blockedRanges=[] //list of ranges
			if previousAzimuth:
				intAngle = currentAz - previousAz
			



			previousAz=360-currentAz
			previousVertex=vertex
		if endCap == flat: // make point at 90 degree of azim, if previous azime, make points between both

		else: //arc cap
		if polygon:
			//check outside and inside range? process as line and merge with polygon, if buffer is negative?
			// buffer as line
			if distance < 0.0:
				erease(geometry,buffered)
			else:
				union(buffered,geometry)



	//union if dissolve
	if ( dissolve):
		union(buffered)

	return(buffered) //need to reproject


//https://geographiclib.sourceforge.io/Python/doc/code.html#geographiclib.geodesic.Geodesic.Direct
def make_arcs(srcPnt,distance,start=0,end=360,precision=1):
	ranges=ranges

	arc=[]
	for az in range(start,end+precision,precision):
		destPnt=geosgraphlib.Direct(srcPnt.lat,srcPnt.long,az,dist)
		arc.append(QgsPoint(destPnt.lat2,destPnt.long2))

	return(arc)